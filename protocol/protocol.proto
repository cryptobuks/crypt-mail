syntax = "proto3";

package protocol;

import "account.proto";


service Alice {
    rpc HandShake(HandShakeRequest) returns (HandShakeResponse);
    rpc Query(QueryRequest) returns (QueryResponse);
    rpc Lock(LockRequest) returns (LockResponse);
    // maybe split the action to unlock and load would be better
    rpc Unlock(UnlockRequest) returns (UnlockResponse);
    rpc Save(SaveRequest) returns (SaveResponse);

}

message HandShakeRequest {
    uint64 session_id = 1;
}

message HandShakeResponse {
    uint64 session_id = 1;
    string pub_key = 2;
    string priv_key = 3;
}

message QueryRequest {
    uint64 session_id = 1;
    string name = 2;
}

message QueryResponse {
    uint64 session_id = 1;
    repeated Account accounts = 2;
}

message LockRequest {
    uint64 session_id = 1;
    string name = 2;
}

message LockResponse {
    uint64 session_id = 1;
    bool status = 2;
    string msg = 3;
}

message UnlockRequest {
    uint64 session_id = 1;
    string name = 2;
    string cipher = 3;
}

message UnlockResponse {
    uint64 session_id = 1;
    bool status = 2;
    string msg = 3;
    bytes encrypt_account = 4;
}

message SaveRequest {
    uint64 session_id = 1;
    string name = 2;
    Account account = 3;
}

message SaveResponse {
    uint64 session_id = 1;
    bool status = 2;
    string msg = 3;
}
